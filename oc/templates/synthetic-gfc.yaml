---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.synthetics.gfc.name }}
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"scheduler"}]'
spec:
  replicas: 0
  selector:
    matchLabels:
      name: {{ .Values.synthetics.gfc.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Values.synthetics.gfc.name }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }} # force rolling update
    spec:
      hostNetwork: {{ .Values.deployment.hostNetwork }}
      containers:
        - name: {{ .Values.synthetics.gfc.name }}
          image: "{{ .Values.synthetics.gfc.image.repository }}/{{ .Values.synthetics.gfc.image.name }}:{{ .Values.synthetics.gfc.image.tag }}"
          imagePullPolicy: {{ .Values.synthetics.gfc.image.pullPolicy }}
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: scheduler-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: scheduler-secret
                  key: AWS_SECRET_ACCESS_KEY
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: {{ .Values.synthetics.gfc.resources.limits.cpu }}
              memory: {{ .Values.synthetics.gfc.resources.limits.memory }}
            requests:
              cpu: {{ .Values.synthetics.gfc.resources.requests.cpu }}
              memory: {{ .Values.synthetics.gfc.resources.requests.memory }}
      terminationGracePeriodSeconds: 30
